% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rosenblatt.R
\name{inverse_rosenblatt}
\alias{inverse_rosenblatt}
\title{Inverse Rosenblatt transform}
\usage{
inverse_rosenblatt(u, model, cores = 1)
}
\arguments{
\item{u}{matrix of numbers between 0 and 1.}

\item{model}{a model object; classes currently supported are
\code{bicop_dist()}, \code{vinecop_dist()}, and \code{vine_dist()}.}

\item{cores}{if \code{>1}, computation is parallelized over \code{cores} batches (rows
of \code{u}).}
}
\description{
The inverse Rosenblatt transform computes conditional quantiles and can be
used simulate from a stochastic model, see \emph{Details}.
}
\details{
The Rosenblatt transform (Rosenblatt, 1952) \eqn{U = T(V)} of a random vector
\eqn{V = (V_1,\ldots,V_d) ~ F} is defined as
\deqn{ 
  U_1 = V_1, U_2 = F(V_2|V_1), \ldots, U_d =F(V_d|V_1,\ldots,V_{d-1}), 
}
where \eqn{F(v_k|v_1,\ldots,v_{k-1})} is the conditional distribution of
\eqn{V_k} given \eqn{V_1 \ldots, V_{k-1}, k = 2,\ldots,d}. The vector \eqn{U}
are then independent standard uniform variables. The inverse operation
\deqn{ 
  V_1 = U_1, V_2 = F^{-1}(U_2|U_1), \ldots, V_d =F^{-1}(U_d|U_1,\ldots,U_{d-1}), 
}
can can be used to simulate from a distribution. For any copula \eqn{F}, if
\eqn{U} is a vector of independent random variables, \eqn{V = T^{-1}(U)} has
distribution \eqn{F}.
}
\examples{
# simulate data
x <- replicate(3, rnorm(200))
u <- replicate(3, runif(200))

# estimate a vine distribution model
fit <- vine(x, copula_controls = list(family_set = "par"))

# inverse rosenblatt transform for vine distribution
pairs(inverse_rosenblatt(u, fit))

# inverse rosenblatt transform for vine copula
pairs(inverse_rosenblatt(u, fit$copula))

# inverse rosenblatt transform for a bivariate copula
plot(inverse_rosenblatt(u[, 1:2], bicop_dist("clayton", 0, 3)))
}
